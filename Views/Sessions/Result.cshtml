@model Employee_Survey.Domain.Session
@using Employee_Survey.Domain
@{
    ViewData["Title"] = "Kết quả bài test";
    var passClass = Model.IsPassed ? "badge bg-success" : "badge bg-danger";
}

<h2 class="mb-3">Kết quả bài test</h2>

<div class="card mb-4">
    <div class="card-body">
        <div class="d-flex align-items-center gap-3 flex-wrap">
            <div><strong>Session ID:</strong> @Model.Id</div>
            <div><strong>Bắt đầu:</strong> @Model.StartAt.ToLocalTime()</div>
            <div><strong>Kết thúc:</strong> @(Model.EndAt?.ToLocalTime().ToString() ?? "-")</div>
            <div><strong>Trạng thái:</strong> @Model.Status</div>
        </div>
        <hr />
        <div class="d-flex align-items-center gap-4 flex-wrap">
            <div><strong>Điểm:</strong> @Model.TotalScore / @Model.MaxScore</div>
            <div><strong>Tỷ lệ đúng:</strong> @Model.Percent %</div>
            <div><span class="@passClass">@((Model.IsPassed) ? "ĐẠT" : "KHÔNG ĐẠT")</span></div>
        </div>
    </div>
</div>

<table class="table table-bordered table-hover">
    <thead class="table-light">
        <tr>
            <th style="width:60px;">#</th>
            <th>Nội dung</th>
            <th style="width:160px;">Loại</th>
            <th style="width:220px;">Bạn chọn / Trả lời</th>
            <th style="width:220px;">Đáp án đúng</th>
            <th style="width:100px;">Điểm</th>
        </tr>
    </thead>
    <tbody>
        @{
            var mapAns = Model.Answers.ToDictionary(a => a.QuestionId, a => a);
            for (int i = 0; i < Model.Snapshot.Count; i++)
            {
                var q = Model.Snapshot[i];
                mapAns.TryGetValue(q.Id, out var a);
                string typeLabel = q.Type switch
                {
                    QType.MCQ => "Trắc nghiệm (MCQ)",
                    QType.TrueFalse => "Đúng/Sai",
                    QType.Essay => "Tự luận",
                    _ => q.Type.ToString()
                };

                string yourAnswer = q.Type switch
                {
                    QType.MCQ or QType.TrueFalse => a?.Selected ?? "(chưa chọn)",
                    QType.Essay => string.IsNullOrWhiteSpace(a?.TextAnswer) ? "(chưa trả lời)" : a!.TextAnswer!,
                    _ => a?.Selected ?? ""
                };

                string correct = (q.Type == QType.MCQ || q.Type == QType.TrueFalse)
                ? string.Join(", ", q.CorrectKeys ?? new List<string>())
                : "(chấm tay)";

                var rowClass = (q.Type == QType.MCQ || q.Type == QType.TrueFalse)
                ? ((a?.Score ?? 0) > 0 ? "table-success" : "table-danger")
                : "";
                <tr class="@rowClass">
                    <td>@(i + 1)</td>
                    <td>@q.Content</td>
                    <td>@typeLabel</td>
                    <td>@yourAnswer</td>
                    <td>@correct</td>
                    <td>@(a?.Score ?? 0)</td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="mt-3">
    <a class="btn btn-secondary" href="/mytests">Quay về danh sách bài test</a>
    <a class="btn btn-outline-primary" href="/Feedback/Create?sessionId=@Model.Id">
        Gửi feedback cho bài test này
    </a>
</div>
